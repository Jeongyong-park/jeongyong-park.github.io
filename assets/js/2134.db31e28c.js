"use strict";(self.webpackChunkjeongyong_park_github_io=self.webpackChunkjeongyong_park_github_io||[]).push([[2134],{2134:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var r=t(2767),n=t(4848),l=t(8453);const o={title:"C#에서 Thread와 Parallel.ForEach 안전하게 중단하는 방법",date:"2025-06-02T09:00:00",authors:["jypark"],image:"/img/blog/safe-thread-cancellation-in-csharp.webp",tags:["csharp","dotnet","threading","parallel"],description:"C#에서 Thread.Abort() 없이 Thread와 Parallel.ForEach를 안전하게 중단하는 방법을 CancellationToken과 플래그 패턴으로 알아봅니다.",slug:"csharp-thread-parallel-foreach-safe-cancellation"},i=void 0,s={authorsImageUrls:[void 0]},c=[];function h(e){const a={blockquote:"blockquote",img:"img",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.img,{alt:"safe-thread-cancellation-in-csharp",src:t(4829).A+"",width:"1200",height:"800"}),"\n멀티스레딩 환경에서 작업을 안전하게 중단하는 것은 중요한 과제입니다. 특히 C#에서 Thread.Abort()가 .NET 5 이상에서 지원되지 않으면서, 안전한 중단 방법에 대한 이해가 더욱 중요해졌습니다."]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"TL;DR"}),": Thread.Abort() 대신 CancellationToken이나 플래그 패턴을 사용하여 Thread와 Parallel.ForEach를 안전하게 중단할 수 있습니다. 이 방법들은 리소스 누수와 데이터 손상을 방지하며 .NET의 표준 취소 패턴을 따릅니다."]}),"\n"]})]})}function p(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},2767:e=>{e.exports=JSON.parse('{"permalink":"/blog/csharp-thread-parallel-foreach-safe-cancellation","source":"@site/blog/2025-06-02/index.md","title":"C#에서 Thread와 Parallel.ForEach 안전하게 중단하는 방법","description":"C#에서 Thread.Abort() 없이 Thread와 Parallel.ForEach를 안전하게 중단하는 방법을 CancellationToken과 플래그 패턴으로 알아봅니다.","date":"2025-06-02T09:00:00.000Z","tags":[{"inline":true,"label":"csharp","permalink":"/blog/tags/csharp"},{"inline":true,"label":"dotnet","permalink":"/blog/tags/dotnet"},{"inline":true,"label":"threading","permalink":"/blog/tags/threading"},{"inline":true,"label":"parallel","permalink":"/blog/tags/parallel"}],"readingTime":8.04,"hasTruncateMarker":true,"authors":[{"name":"Jeongyong Park","title":"쌍팔년생 개발자","url":"https://github.com/jeongyong-park","email":"kladess@gmail.com","socials":{"x":"https://x.com/chisquare88","github":"https://github.com/jeongyong-park"},"imageURL":"/img/avatar.webp","key":"jypark","page":null}],"frontMatter":{"title":"C#에서 Thread와 Parallel.ForEach 안전하게 중단하는 방법","date":"2025-06-02T09:00:00","authors":["jypark"],"image":"/img/blog/safe-thread-cancellation-in-csharp.webp","tags":["csharp","dotnet","threading","parallel"],"description":"C#에서 Thread.Abort() 없이 Thread와 Parallel.ForEach를 안전하게 중단하는 방법을 CancellationToken과 플래그 패턴으로 알아봅니다.","slug":"csharp-thread-parallel-foreach-safe-cancellation"},"unlisted":false,"prevItem":{"title":"LM Studio: 내 PC에서 AI 언어모델을 자유롭게 실행하는 방법","permalink":"/blog/lm-studio-local-ai-guide"},"nextItem":{"title":"Supabase 완벽 가이드: Firebase 대안으로 떠오르는 오픈소스 백엔드 플랫폼","permalink":"/blog/supabase-complete-guide-firebase-alternative"}}')},4829:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/safe-thread-cancellation-in-csharp-94ea6ded89c3d51ff7639164920a117d.webp"},8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>i});var r=t(6540);const n={},l=r.createContext(n);function o(e){const a=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(l.Provider,{value:a},e.children)}}}]);